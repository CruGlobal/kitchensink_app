name: Cypress Test
on:
  # Run on any commit to the #master branch
  push:
    branches: [master]

  # Run on pull requests into the #master branch

  pull_request:
    branches: [master]

  # Allows user to trigger the workflow from GitHub's web UI
  workflow_dispatch:

jobs:
  cypress-test:
    runs-on: ubuntu-latest
    env:
      CYPRESS_RESPONSE_TIMEOUT: 200000
      CYPRESS_DEFAULT_COMMAND_TIMEOUT: 30000
      CYPRESS_RETRIES: 2
    steps:
      # Setup
      - uses: CruGlobal/ab-install-action@v1
        with:
          folder: ab
          port: 8080
      # Up
      - name: Bring up AppBuilder
        run: |
          echo "Starting AppBuilder with UP.sh..."
          ./UP.sh -q -t 2>&1 | tee up_output.log
          echo "UP.sh completed with exit code: $?"
          echo "=== UP.sh output ==="
          cat up_output.log || echo "No output log found"
        working-directory: ./ab

      - name: Debug AppBuilder Startup
        run: |
          echo "=== Checking if AppBuilder processes are running ==="
          ps aux | grep -E "(node|appbuilder|AB)" | grep -v grep || echo "No AppBuilder processes found"
          
          echo "=== Checking what's listening on port 8080 ==="
          netstat -tlnp | grep :8080 || echo "Nothing listening on port 8080"
          
          echo "=== Checking if port 8080 is in use ==="
          lsof -i :8080 || echo "Port 8080 is not in use"
          
          echo "=== Checking AppBuilder directory structure ==="
          ls -la ./ || echo "Cannot list current directory"
          
          echo "=== Checking for any error logs ==="
          find . -name "*.log" -type f -exec echo "=== {} ===" \; -exec tail -n 80 {} \; 2>/dev/null || echo "No log files found"
          
          echo "=== Checking if UP.sh script exists and is executable ==="
          ls -la ./UP.sh || echo "UP.sh not found"
          
          echo "=== Checking AppBuilder configuration ==="
          if [ -f "./config.js" ]; then
            echo "config.js found, checking port configuration:"
            grep -i port ./config.js || echo "No port configuration found in config.js"
          else
            echo "config.js not found"
          fi
        working-directory: ./ab

      - name: Docker Compose Status & Logs
        run: |
          echo "=== Docker Compose ps (all services) ==="
          docker compose ps -a
          echo "=== Docker ps (all containers) ==="
          docker ps -a
          echo "=== Docker network inspect ==="
          docker network inspect ab_default || true
          echo "=== MySQL Container Check ==="
          docker ps -a | grep -i mysql || echo "No MySQL containers found"
          echo "=== Docker Compose Config ==="
          docker compose config | grep -A 5 "db:" || true
          echo "=== Docker Compose logs (all services) ==="
          docker compose logs --tail=100
        working-directory: ./ab

      - name: Check out
        uses: actions/checkout@v4
        with:
          path: ab/test/e2e/cypress/e2e/kitchensink_app

      # These next steps are to save our ablogs to file
      - run: npm install pm2@latest -g
        working-directory: ./ab
      - name: Save Logs
        run: pm2 start ./logs.js -- --toFile logs/ABServices.log
        working-directory: ./ab

      #Run test
      - name: Check AB Logs
        run: |
          echo "Checking AppBuilder logs..."
          if [ -f ./logs/ABServices.log ]; then
            echo "=== Last 20 lines of log file ==="
            tail -n 20 ./logs/ABServices.log
            echo "=== End of log file ==="
          else
            echo "No log file found. Checking process status..."
            echo "=== PM2 Process List ==="
            pm2 list
            echo "=== Node Processes ==="
            ps aux | grep node || true
            echo "=== Checking logs directory ==="
            ls -la ./logs || true
          fi
        working-directory: ./ab

      - name: Wait for AB
        uses: ifaxity/wait-on-action@v1.2.1
        with:
          resource: http://localhost:8080
          timeout: 300000  # 5 minutes
          delay: 5000      # Wait 5 seconds before starting to check
          interval: 5000   # Check every 5 seconds
          verbose: true    

      - name: Run Cypress Tests
        run: npm run test:e2e:app -- --browser chrome
        working-directory: ./ab

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: ./ab/test/e2e/cypress/screenshots
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ABServices.log
          path: ./ab/logs/ABServices.log
